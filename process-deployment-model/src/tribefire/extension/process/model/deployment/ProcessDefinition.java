// ============================================================================
// This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.
// 
// This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License along with this library; See http://www.gnu.org/licenses/.
// ============================================================================
/**
 * 
 * Copyright by Braintribe Technologies 

 * autogenerated code 
 *
 */

package tribefire.extension.process.model.deployment;

import java.util.List;
import java.util.Set;

import com.braintribe.model.generic.annotation.SelectiveInformation;
import com.braintribe.model.generic.annotation.meta.Mandatory;
import com.braintribe.model.generic.reflection.EntityType;
import com.braintribe.model.generic.reflection.EntityTypes;
import com.braintribe.model.meta.data.HasMetaData;
import com.braintribe.model.resource.Resource;
import com.braintribe.model.time.TimeSpan;

@SelectiveInformation("${name}")
public interface ProcessDefinition extends HasErrorNode, HasOverdueNode, DecoupledInteraction, HasMetaData {

	EntityType<ProcessDefinition> T = EntityTypes.T(ProcessDefinition.class);

	String maximumNumbersOfRestarts = "maximumNumbersOfRestarts";  
	String elements = "elements";
	String onTransit = "onTransit";
	String onError = "onError";
	String gracePeriod = "gracePeriod";
	String name = "name";
	String resources = "resources";
	
	Integer getMaximumNumbersOfRestarts();
	void setMaximumNumbersOfRestarts(Integer maximumNumbersOfRestarts);
	
	Set<ProcessElement> getElements();
	void setElements(Set<ProcessElement> elements);

	List<TransitionProcessor> getOnTransit();
	void setOnTransit(List<TransitionProcessor> onTransit);
	
	List<TransitionProcessor> getOnError();
	void setOnError(List<TransitionProcessor> onError);
	
	TimeSpan getGracePeriod();
	void setGracePeriod(TimeSpan gracePeriod);
	
	@Mandatory
	String getName();
	void setName(String name);
	
	Set<Resource> getResources();
	void setResources(Set<Resource> resources);
}
